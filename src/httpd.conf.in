#
# This is the main Apache HTTP server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://httpd.apache.org/docs/2.4/> for detailed information.
# In particular, see 
# <URL:http://httpd.apache.org/docs/2.4/mod/directives.html>
# for a discussion of each configuration directive.
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.  
#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so 'log/access_log'
# with ServerRoot set to '/www' will be interpreted by the
# server as '/www/log/access_log', where as '/log/access_log' will be
# interpreted as '/log/access_log'.

<IfDefine Test>
ServerRoot @PREFIX@
</IfDefine>
<IfDefine !Test>
<IfDefine Development>
ServerRoot @PREFIX@
PidFile @PREFIX@/httpd.pid
</IfDefine>
<IfDefine !Development>
Listen @IP@:443
Listen @IP@:80
</IfDefine>

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to 
# prevent Apache from glomming onto all bound IP addresses.
#
#Listen @IP@:80
<IfDefine Development>
Listen 127.0.0.1:8080
</IfDefine>
<IfDefine !Development>
Listen @IP@:443
Listen @IP@:80
</IfDefine>
</IfDefine>

#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l') do not need
# to be loaded here.
LoadModule access_compat_module modules/mod_access_compat.so
LoadModule actions_module modules/mod_actions.so
LoadModule alias_module modules/mod_alias.so
LoadModule allowmethods_module modules/mod_allowmethods.so
LoadModule auth_basic_module modules/mod_auth_basic.so
#LoadModule auth_digest_module modules/mod_auth_digest.so
LoadModule authn_anon_module modules/mod_authn_anon.so
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authn_dbd_module modules/mod_authn_dbd.so
LoadModule authn_dbm_module modules/mod_authn_dbm.so
LoadModule authn_file_module modules/mod_authn_file.so
LoadModule authn_socache_module modules/mod_authn_socache.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule authz_dbd_module modules/mod_authz_dbd.so
LoadModule authz_dbm_module modules/mod_authz_dbm.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule authz_owner_module modules/mod_authz_owner.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule autoindex_module modules/mod_autoindex.so
LoadModule cache_module modules/mod_cache.so
LoadModule cache_disk_module modules/mod_cache_disk.so
LoadModule cache_socache_module modules/mod_cache_socache.so
LoadModule data_module modules/mod_data.so
LoadModule dbd_module modules/mod_dbd.so
LoadModule deflate_module modules/mod_deflate.so
LoadModule dir_module modules/mod_dir.so
LoadModule dumpio_module modules/mod_dumpio.so
LoadModule echo_module modules/mod_echo.so
LoadModule env_module modules/mod_env.so
LoadModule expires_module modules/mod_expires.so
LoadModule ext_filter_module modules/mod_ext_filter.so
LoadModule filter_module modules/mod_filter.so
LoadModule headers_module modules/mod_headers.so
#LoadModule http2_module modules/mod_http2.so
LoadModule include_module modules/mod_include.so
LoadModule info_module modules/mod_info.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule logio_module modules/mod_logio.so
LoadModule macro_module modules/mod_macro.so
LoadModule mime_magic_module modules/mod_mime_magic.so
LoadModule mime_module modules/mod_mime.so
LoadModule negotiation_module modules/mod_negotiation.so
LoadModule remoteip_module modules/mod_remoteip.so
LoadModule reqtimeout_module modules/mod_reqtimeout.so
LoadModule request_module modules/mod_request.so
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule slotmem_plain_module modules/mod_slotmem_plain.so
LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
LoadModule socache_dbm_module modules/mod_socache_dbm.so
LoadModule socache_memcache_module modules/mod_socache_memcache.so
LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
LoadModule status_module modules/mod_status.so
LoadModule substitute_module modules/mod_substitute.so
LoadModule suexec_module modules/mod_suexec.so
LoadModule unique_id_module modules/mod_unique_id.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule userdir_module modules/mod_userdir.so
LoadModule version_module modules/mod_version.so
LoadModule vhost_alias_module modules/mod_vhost_alias.so
LoadModule watchdog_module modules/mod_watchdog.so

# prefork MPM: Implements a non-threaded, pre-forking web server
# See: http://httpd.apache.org/docs/2.4/mod/prefork.html
LoadModule mpm_prefork_module modules/mod_mpm_prefork.so

# worker MPM: Multi-Processing Module implementing a hybrid
# multi-threaded multi-process web server
# See: http://httpd.apache.org/docs/2.4/mod/worker.html
#
#LoadModule mpm_worker_module modules/mod_mpm_worker.so

# event MPM: A variant of the worker MPM with the goal of consuming
# threads only for connections with active processing
# See: http://httpd.apache.org/docs/2.4/mod/event.html
#
#LoadModule mpm_event_module modules/mod_mpm_event.so

#LoadModule asis_module modules/mod_asis.so
#LoadModule buffer_module modules/mod_buffer.so
#LoadModule heartbeat_module modules/mod_heartbeat.so
#LoadModule heartmonitor_module modules/mod_heartmonitor.so
#LoadModule usertrack_module modules/mod_usertrack.so
#LoadModule dialup_module modules/mod_dialup.so
#LoadModule charset_lite_module modules/mod_charset_lite.so
#LoadModule log_debug_module modules/mod_log_debug.so
#LoadModule log_forensic_module modules/mod_log_forensic.so
#LoadModule ratelimit_module modules/mod_ratelimit.so
#LoadModule reflector_module modules/mod_reflector.so
#LoadModule sed_module modules/mod_sed.so
#LoadModule speling_module modules/mod_speling.so

# This file configures all the proxy modules:
LoadModule proxy_module modules/mod_proxy.so
LoadModule lbmethod_bybusyness_module modules/mod_lbmethod_bybusyness.so
LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so
LoadModule lbmethod_bytraffic_module modules/mod_lbmethod_bytraffic.so
LoadModule lbmethod_heartbeat_module modules/mod_lbmethod_heartbeat.so
LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
LoadModule proxy_connect_module modules/mod_proxy_connect.so
LoadModule proxy_express_module modules/mod_proxy_express.so
LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so
LoadModule proxy_fdpass_module modules/mod_proxy_fdpass.so
LoadModule proxy_ftp_module modules/mod_proxy_ftp.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule proxy_hcheck_module modules/mod_proxy_hcheck.so
LoadModule proxy_scgi_module modules/mod_proxy_scgi.so
LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
<IfDefine !Development>
LoadModule ssl_module modules/mod_ssl.so
Include /etc/httpd/conf.d/ssl.conf
</IfDefine>
LoadModule systemd_module modules/mod_systemd.so

<IfModule mpm_worker_module>
   LoadModule cgid_module modules/mod_cgid.so
</IfModule>
<IfModule mpm_event_module>
   LoadModule cgid_module modules/mod_cgid.so
</IfModule>
<IfModule mpm_prefork_module>
   LoadModule cgi_module modules/mod_cgi.so
</IfModule>

# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.  
#
# User/Group: The name (or #number) of the user/group to run httpd as.
# It is usually good practice to create a dedicated user and group for
# running httpd, as with most system services.
#
<IfDefine Development>
User @USER@
Group @USER@
</IfDefine>
<IfDefine !Development>
User apache
Group apache
</IfDefine>

# 'Main' server configuration
#
# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for
# any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers,
# in which case these default settings will be overridden for the
# virtual host being defined.
#

#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.  e.g. admin@your-domain.com
#
<IfDefine Development>
ServerAdmin dafrito@gmail.com
</IfDefine>
<IfDefine !Development>
ServerAdmin admin@parsegraph.com
</IfDefine>

#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn't have a registered DNS name, enter its IP address here.
#
<IfDefine Development>
ServerName localhost
</IfDefine>
<IfDefine !Development>
ServerName parsegraph.com
</IfDefine>

#
# Deny access to the entirety of your server's filesystem. You must
# explicitly permit access to web content directories in other 
# <Directory> blocks below.
#
<Directory />
    AllowOverride none
    Require all denied
</Directory>

#
# Note that from this point forward you must specifically allow
# particular features to be enabled - so if something's not working as
# you might expect, make sure that you have specifically enabled it
# below.
#

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
<IfDefine Development>
DocumentRoot "@PARSEGRAPHDIR@/server/public_html"
</IfDefine>
<IfDefine !Development>
DocumentRoot "/srv/html"
</IfDefine>

#
# Relax access to content within /var/public_html.
#
<IfDefine Development>
<Directory "@PARSEGRAPHDIR@/server/public_html">
    AllowOverride None
    # Allow open access:
    Require all granted

    #
    # Possible values for the Options directive are "None", "All",
    # or any combination of:
    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
    #
    # Note that "MultiViews" must be named *explicitly* --- "Options All"
    # doesn't give it to you.
    #
    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.4/mod/core.html#options
    # for more information.
    #
    Options Indexes FollowSymLinks
</Directory>
</IfDefine>
<IfDefine !Development>
<Directory "/srv/html">
    AllowOverride None
    # Allow open access:
    Require all granted

    #
    # Possible values for the Options directive are "None", "All",
    # or any combination of:
    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
    #
    # Note that "MultiViews" must be named *explicitly* --- "Options All"
    # doesn't give it to you.
    #
    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.4/mod/core.html#options
    # for more information.
    #
    Options Indexes FollowSymLinks
</Directory>
</IfDefine>

#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>

#
# The following lines prevent .htaccess and .htpasswd files from being 
# viewed by Web clients. 
#
<Files ".ht*">
    Require all denied
</Files>

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
<IfDefine Development>
ErrorLog "@PREFIX@/error_log"
</IfDefine>
<IfDefine !Development>
ErrorLog "logs/error_log"
</IfDefine>

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
<IfDefine Development>
LogLevel info
</IfDefine>
<IfDefine !Development>
LogLevel warn
</IfDefine>

<IfModule log_config_module>
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common

    <IfModule logio_module>
      # You need to enable mod_logio.c to use %I and %O
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a <VirtualHost>
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-<VirtualHost> access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    #CustomLog "access_log" common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    <IfDefine Development>
    CustomLog "access_log" combined
    </IfDefine>
    <IfDefine !Development>
    CustomLog "logs/access_log" combined
    </IfDefine>
</IfModule>

<IfModule alias_module>
    #
    # Redirect: Allows you to tell clients about documents that used to 
    # exist in your server's namespace, but do not anymore. The client 
    # will make a new request for the document at its new location.
    # Example:
    # Redirect permanent /foo http://www.example.com/bar

    #
    # Alias: Maps web paths into filesystem paths and is used to
    # access content that does not live under the DocumentRoot.
    # Example:
    # Alias /webpath /full/filesystem/path
    #
    # If you include a trailing / on /webpath then the server will
    # require it to be present in the URL.  You will also likely
    # need to provide a <Directory> section to allow access to
    # the filesystem path.

    #
    # ScriptAlias: This controls which directories contain server scripts. 
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the target directory are treated as applications and
    # run by the server when requested rather than as documents sent to the
    # client.  The same rules about trailing "/" apply to ScriptAlias
    # directives as to Alias.
    #
    #ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"

</IfModule>

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #
    TypesConfig /etc/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    #AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    #AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    AddType text/html .shtml
    AddOutputFilter INCLUDES .shtml
</IfModule>

#
# Specify a default charset for all content served; this enables
# interpretation of all content as UTF-8 by default.  To use the 
# default browser choice (ISO-8859-1), or to allow the META tags
# in HTML content to override this choice, comment out this
# directive:
#
AddDefaultCharset UTF-8

<IfModule mime_magic_module>
    #
    # The mod_mime_magic module allows the server to use various hints from the
    # contents of the file itself to determine its type.  The MIMEMagicFile
    # directive tells the module where the hint definitions are located.
    #
    MIMEMagicFile magic
</IfModule>

#
# Customizable error responses come in three flavors:
# 1) plain text 2) local redirects 3) external redirects
#
# Some examples:
#ErrorDocument 500 "The server made a boo boo."
#ErrorDocument 404 /missing.html
#ErrorDocument 404 "/cgi-bin/missing_handler.pl"
#ErrorDocument 402 http://www.example.com/subscription_info.html
#

#
# EnableMMAP and EnableSendfile: On systems that support it, 
# memory-mapping or the sendfile syscall may be used to deliver
# files.  This usually improves server performance, but must
# be turned off when serving from networked-mounted 
# filesystems or if support for these functions is otherwise
# broken on your system.
# Defaults if commented: EnableMMAP On, EnableSendfile Off
#
#EnableMMAP off
EnableSendfile on

DBDriver sqlite3
<IfDefine Development>
DBDParams /home/dafrito/var/parsegraph/users.sqlite
</IfDefine>
<IfDefine !Development>
DBDParams /srv/parsegraph/users.sqlite
</IfDefine>

DBDPrepareSQL "SELECT id, password, password_salt, profile FROM user WHERE username = %s" parsegraph_user_getUser
DBDPrepareSQL "INSERT INTO user(username, password, password_salt) VALUES(%s, %s, %s)" parsegraph_user_createNewUser
DBDPrepareSQL "INSERT INTO login(username, selector, token) VALUES(%s, %s, %s)" parsegraph_user_beginUserLogin
DBDPrepareSQL "DELETE FROM login WHERE username = %s" parsegraph_user_endUserLogin
DBDPrepareSQL "SELECT id, username FROM user" parsegraph_user_listUsers
DBDPrepareSQL "DELETE FROM user WHERE username = %s" parsegraph_user_removeUser
DBDPrepareSQL "SELECT username FROM login WHERE selector = %s AND token = %s" parsegraph_user_refreshUserLogin
DBDPrepareSQL "UPDATE user SET profile = %pDt WHERE username = %s" parsegraph_user_setUserProfile

<IfDefine Development>
LoadFile @PARSEGRAPHDIR@/user/src/.libs/libparsegraph_user_httpd.so
LoadFile @PARSEGRAPHDIR@/user/src/.libs/libparsegraph_user.so
LoadModule parsegraph_user_json_module @PARSEGRAPHDIR@/server/mod_parsegraph_user_json.so
LoadModule parsegraph_user_html_module @PARSEGRAPHDIR@/server/mod_parsegraph_user_html.so
</IfDefine>
<IfDefine !Development>
LoadFile /usr/lib64/libparsegraph_user_httpd.so
LoadFile /usr/lib64/libparsegraph_user.so
LoadModule parsegraph_user_json_module modules/mod_parsegraph_user_json.so
LoadModule parsegraph_user_html_module modules/mod_parsegraph_user_html.so
</IfDefine>

<LocationMatch "^/user/?$">
SetHandler parsegraph_user
AllowMethods GET POST PUT DELETE
SetOutputFilter DEFLATE
</LocationMatch>

<IfDefine Development>
LoadModule parsegraph_index_html_module @PARSEGRAPHDIR@/server/mod_parsegraph_index_html.so
</IfDefine>
<IfDefine !Development>
LoadModule parsegraph_index_html_module modules/mod_parsegraph_index_html.so
</IfDefine>
<LocationMatch "^/?$">
SetHandler parsegraph_index_html
SetOutputFilter DEFLATE
</LocationMatch>

DBDPrepareSQL "INSERT INTO list_item(value) VALUES(%s)" parsegraph_List_new
DBDPrepareSQL "SELECT id from list_item WHERE list_id IS NULL AND value = %s" parsegraph_List_getID
DBDPrepareSQL "SELECT value,type from list_item WHERE id = %d" parsegraph_List_getName
DBDPrepareSQL "DELETE FROM list_item WHERE list_id IS NULL AND id = %d" parsegraph_List_destroy
DBDPrepareSQL "INSERT INTO list_item(list_id, type, value, prev, next) VALUES(%d, %d, %s, NULL, NULL)" parsegraph_List_newItem
DBDPrepareSQL "SELECT last_insert_rowid()" parsegraph_List_getLastId
DBDPrepareSQL "UPDATE list_item SET next = %d WHERE list_id = %d and next IS NULL AND id IS NOT %d" parsegraph_List_append
DBDPrepareSQL "UPDATE list_item SET prev = %d WHERE list_id = %d and prev IS NULL AND id IS NOT %d" parsegraph_List_prepend
DBDPrepareSQL "DELETE FROM list_item WHERE list_id = %d" parsegraph_List_truncate
DBDPrepareSQL "SELECT id FROM list_item WHERE list_id = %d and prev IS NULL" parsegraph_List_getHead
DBDPrepareSQL "SELECT id FROM list_item WHERE list_id = %d and next IS NULL" parsegraph_List_getTail
DBDPrepareSQL "UPDATE list_item SET prev = %d WHERE id = %d" parsegraph_List_setPrev
DBDPrepareSQL "UPDATE list_item SET next = %d WHERE id = %d" parsegraph_List_setNext
DBDPrepareSQL "SELECT next FROM list_item WHERE id = %d" parsegraph_List_getNext
DBDPrepareSQL "SELECT prev FROM list_item WHERE id = %d" parsegraph_List_getPrev
DBDPrepareSQL "UPDATE list_item SET type = %d, value = %s WHERE id = %d" parsegraph_List_updateItem
DBDPrepareSQL "UPDATE list_item SET next = NULL, prev = NULL WHERE id = %d" parsegraph_List_removeItem
DBDPrepareSQL "DELETE FROM list_item WHERE id = %d" parsegraph_List_destroyItem
DBDPrepareSQL "SELECT id, next, prev, value, type FROM list_item WHERE list_id = %d" parsegraph_List_listItems
DBDPrepareSQL "SELECT COUNT(*) from list_item WHERE list_id IS %d" parsegraph_List_length
DBDPrepareSQL "SELECT list_id FROM list_item WHERE id = %d" parsegraph_List_getListId
DBDPrepareSQL "UPDATE list_item SET next = NULL WHERE id = %d" parsegraph_List_clearNext
DBDPrepareSQL "UPDATE list_item SET prev = NULL WHERE id = %d" parsegraph_List_clearPrev
DBDPrepareSQL "UPDATE list_item SET value = %s WHERE id = %d" parsegraph_List_setValue
DBDPrepareSQL "UPDATE list_item SET type = %d WHERE id = %d" parsegraph_List_setType
DBDPrepareSQL "UPDATE list_item SET list_id = %d WHERE list_id = %d" parsegraph_List_reparentItems
DBDPrepareSQL "UPDATE user SET is_super_admin = 1 WHERE username = %s" parsegraph_user_grantSuperadmin
DBDPrepareSQL "UPDATE user SET is_super_admin = 0 WHERE username = %s" parsegraph_user_revokeSuperadmin
DBDPrepareSQL "UPDATE user SET is_banned = 1 WHERE username = %s" parsegraph_user_banUser
DBDPrepareSQL "UPDATE user SET is_banned = 0 WHERE username = %s" parsegraph_user_unbanUser
DBDPrepareSQL "UPDATE user SET allow_subscription = 1 WHERE username = %s" parsegraph_user_allowSubscription
DBDPrepareSQL "UPDATE user SET allow_subscription = 0 WHERE username = %s" parsegraph_user_disallowSubscription
DBDPrepareSQL "SELECT allow_subscription FROM user WHERE username = %s" parsegraph_user_allowsSubscription
DBDPrepareSQL "SELECT is_banned FROM user WHERE username = %s" parsegraph_user_isBanned
DBDPrepareSQL "SELECT is_super_admin FROM user WHERE username = %s" parsegraph_user_hasSuperadmin

DBDPrepareSQL "INSERT INTO environment(environment_guid, for_new_users, for_administrators, create_date, open_to_public, open_for_visits, open_for_modification, visit_count, owner, root_list_id, environment_type_id) VALUES(lower(hex(randomblob(4))) || '-' || lower(hex(randomblob(2))) || '-' || lower(hex(randomblob(2))) || '-' || lower(hex(randomblob(2))) || '-' || lower(hex(randomblob(6))), 0, 0, strftime('%%Y-%%m-%%dT%%H:%%M:%%f', 'now'), 0, 0, 0, 0, %d, %d, %d)" parsegraph_Environment_createEnvironment
DBDPrepareSQL "DELETE FROM environment WHERE environment_guid = %s" parsegraph_Environment_destroyEnvironment
DBDPrepareSQL "SELECT last_insert_rowid();" parsegraph_Environment_last_insert_rowid
DBDPrepareSQL "SELECT environment_guid FROM environment WHERE environment_id = %d" parsegraph_Environment_getEnvironmentGUIDForId
DBDPrepareSQL "SELECT online_environment_id FROM login WHERE selector = %s AND token = %s" parsegraph_Environment_getOnlineEnvironment
DBDPrepareSQL "SELECT environment_id FROM environment WHERE environment_guid = %s" parsegraph_Environment_getEnvironmentIdForGUID
DBDPrepareSQL "SELECT environment_title FROM environment WHERE environment_guid = %s" parsegraph_Environment_getEnvironmentTitleForGUID
DBDPrepareSQL "SELECT environment_title FROM environment WHERE environment_id = %d" parsegraph_Environment_getEnvironmentTitleForId
DBDPrepareSQL "SELECT environment_guid, environment_title FROM saved_environment JOIN environment ON saved_environment.environment_id = environment.environment_id WHERE user_id = %d ORDER by save_date DESC" parsegraph_Environment_getSavedEnvironmentsForUser
DBDPrepareSQL "INSERT INTO saved_environment(environment_id, user_id, save_date, client_state) VALUES(%d, %d, datetime('now'), %s)" parsegraph_Environment_saveEnvironment
DBDPrepareSQL "SELECT environment_guid, environment_title FROM environment WHERE owner = %d ORDER by create_date DESC" parsegraph_Environment_getOwnedEnvironmentsForUser
DBDPrepareSQL "UPDATE login SET online_environment_id = %d WHERE selector = %s AND token = %s" parsegraph_Environment_enterEnvironment
DBDPrepareSQL "UPDATE login SET online_environment_id = NULL WHERE selector = %s AND token = %s" parsegraph_Environment_leaveEnvironment
DBDPrepareSQL "SELECT root_list_id FROM environment WHERE environment_guid = %s" parsegraph_Environment_getEnvironmentRoot
DBDPrepareSQL "UPDATE environment SET root_list_id = %d WHERE environment_guid = %s" parsegraph_Environment_setEnvironmentRoot

<IfDefine Development>
LoadFile @PARSEGRAPHDIR@/list/src/.libs/libparsegraph_List.so
LoadModule parsegraph_List_json_module @PARSEGRAPHDIR@/server/mod_parsegraph_List_json.so
</IfDefine>
<IfDefine !Development>
LoadFile /usr/lib64/libparsegraph_List.so
LoadModule parsegraph_List_json_module modules/mod_parsegraph_List_json.so
</IfDefine>

<LocationMatch "^/list/?$">
SetHandler parsegraph_List
AllowMethods GET POST PUT DELETE
</LocationMatch>

<IfDefine Development>
LoadFile @PARSEGRAPHDIR@/environment/src/.libs/libparsegraph_environment.so
LoadModule parsegraph_environment_html_module @PARSEGRAPHDIR@/server/mod_parsegraph_environment_html.so
</IfDefine>
<IfDefine !Development>
LoadFile /usr/lib64/libparsegraph_environment.so
LoadModule parsegraph_environment_html_module modules/mod_parsegraph_environment_html.so
</IfDefine>

<LocationMatch "^/[-0-9a-f]{36}$">
SetHandler parsegraph_environment
AllowMethods GET POST PUT DELETE
SetOutputFilter DEFLATE
</LocationMatch>

<LocationMatch "^/environment/?$">
SetHandler parsegraph_environment
AllowMethods GET POST PUT DELETE
SetOutputFilter DEFLATE
</LocationMatch>

<LocationMatch "^/environment/[-0-9a-f]{36}$">
SetHandler parsegraph_environment_guid
AllowMethods GET POST PUT DELETE
SetOutputFilter DEFLATE
</LocationMatch>

<LocationMatch "^/tag/.*$">
SetHandler parsegraph_environment
AllowMethods GET POST PUT DELETE
SetOutputFilter DEFLATE
</LocationMatch>

ProxyRequests off

<LocationMatch "^/environment/live/?$">
ProxyPass "ws://localhost:7681/environment/live"
ProxyPassReverse "ws://localhost:7681/environment/live"
</LocationMatch>

<LocationMatch "\.js$">
	SetOutputFilter DEFLATE
</LocationMatch>

<LocationMatch "\.html$">
	SetOutputFilter DEFLATE
</LocationMatch>

<LocationMatch "^/UnicodeData.txt$">
	SetOutputFilter DEFLATE
</LocationMatch>
