USER=$(shell whoami)
UID=$(shell id -u `whoami`)
GID=$(shell id -g `whoami`)
PREFIX=@PREFIX@
PACKAGE_NAME=parsegraph_server_config
PACKAGE_VERSION=2.3
PACKAGE_RELEASE=1
PACKAGE_SUMMARY=Server configuration for parsegraph
PACKAGE_DESCRIPTION=Server configuration for parsegraph
PACKAGE_URL=parsegraph.com
build_cpu=noarch

SSL_ROOT_DIR=/etc/letsencrypt/live/parsegraph.com
SSL_CertificateFile=$(SSL_ROOT_DIR)/fullchain.pem
SSL_CertificateKeyFile=$(SSL_ROOT_DIR)/privkey.pem
SSL_CertificateChainFile=$(SSL_ROOT_DIR)/fullchain.pem

PORT=443
BACKEND_PORT=8081

build: $(PACKAGE_NAME).spec httpd.conf rpm.sh
.PHONY: build

HTTPD='httpd -DDevelopment -f `pwd`/httpd.conf'

httpd.conf: src/httpd.conf.in
	rm -f $@
	cp $< $@
	sed -i -ri -e "s|[@]PREFIX[@]|$(PREFIX)|g" $@
	sed -i -ri -e "s|[@]USER[@]|$(USER)|g" $@
	dir=`pwd`; dir=`dirname $$dir`; sed -i -ri -e "s|[@]PARSEGRAPHDIR[@]|$$dir|g" $@
	chmod 0400 $@

check: httpd.conf
	./test_parsegraph.sh
.PHONY: check

install:
	$(MAKE) kill
	$(MAKE) run

test: httpd.conf
	test ! -e httpd.pid || exit 1
	httpd -DDevelopment -X -f `pwd`/httpd.conf
.PHONY: test

VALGRIND = valgrind -v --num-callers=40 --leak-check=full --trace-children=no

checkvalgrind: httpd.conf
	$(VALGRIND) /usr/sbin/httpd -DDevelopment -X -f `pwd`/httpd.conf
.PHONY: checkvalgrind

run: httpd.conf
	test ! -e httpd.pid || (! pgrep httpd) || exit 1
	#test ! -e rainback.pid || (! pgrep rainback) || exit 1
	httpd -DDevelopment -f `pwd`/httpd.conf
	#tmux -S $(PREFIX)/rainback.tmux new-s -d rainback $(PORT) $(BACKEND_PORT)
.PHONY: run

tmux:
	tmux -S $(PREFIX)/rainback.tmux attach
.PHONY: tmux

debug: httpd.conf
	test ! -e httpd.pid || (! pgrep httpd) || exit 1
	test ! -e rainback.pid || (! pgrep rainback) || exit 1
	#tmux -S $(PREFIX)/rainback.tmux new-s -d rainback $(PORT) $(BACKEND_PORT)
	#gdb httpd -ex "r -X -DDevelopment -f `pwd`/httpd.conf"
	httpd -DDevelopment -f `pwd`/httpd.conf
	#gdb rainback -ex "b parsegraph_environment_ws.c:406" -ex "r"
.PHONY: debug

valgrind: httpd.conf
	test ! -e httpd.pid || (! pgrep httpd) || exit 1
	test ! -e rainback.pid || (! pgrep rainback) || exit 1
	#tmux -S $(PREFIX)/rainback.tmux new-s -d rainback $(PORT) $(BACKEND_PORT)
	#$(VALGRIND) httpd -X -DDevelopment -f `pwd`/httpd.conf
	httpd -DDevelopment -f `pwd`/httpd.conf
	#$(VALGRIND) rainback $(PORT) $(BACKEND_PORT)
.PHONY: valgrind

strace: httpd.conf
	test ! -e httpd.pid || (! pgrep httpd) || exit 1
	#test ! -e rainback.pid || (! pgrep rainback) || exit 1
	httpd -DDevelopment -f `pwd`/httpd.conf
	strace -f rainback $(PORT) $(BACKEND_PORT)
.PHONY: debug

pgrep:
	tmux -S $(PREFIX)/rainbakc.tmux list-s; true
	pgrep -l httpd; pgrep -l rainback; true
.PHONY: pgrep

massacre:
	tmux -S $(PREFIX)/rainback.tmux kill-session || true
	pkill -9 rainback; pkill -9 httpd; true
.PHONY: massacre

stop kill:
	test ! -e httpd.pid || kill -28 `cat httpd.pid`
	#test ! -e rainback.pid || ( \
	#TOKILL=$$(ps -q `cat rainback.pid` --no-headers -o '%P'); test -n "$$TOKILL" && kill -9 $$TOKILL; \
	#kill -9 `cat rainback.pid`; \
	#);
.PHONY: stop kill

clean:
	test ! -e httpd.pid
	rm -f httpd.pid httpd.conf $(PACKAGE_NAME)-$(PACKAGE_VERSION)-$(PACKAGE_RELEASE).src.rpm rpm.sh $(PACKAGE_NAME).spec $(PACKAGE_NAME)-$(PACKAGE_VERSION).tar.gz $(PACKAGE_NAME)-*.rpm
.PHONY: clean

rpm.sh: rpm.sh.in
	cp -f $< $@-wip
	sed -i -re 's/@PACKAGE_NAME@/$(PACKAGE_NAME)/g' $@-wip
	sed -i -re 's/@PACKAGE_VERSION@/$(PACKAGE_VERSION)/g' $@-wip
	sed -i -re 's/@PACKAGE_RELEASE@/$(PACKAGE_RELEASE)/g' $@-wip
	mv $@-wip $@
	chmod +x rpm.sh

$(PACKAGE_NAME).spec: rpm.spec.in
	cp -f $< $@-wip
	sed -i -re 's/@PACKAGE_NAME@/$(PACKAGE_NAME)/g' $@-wip
	sed -i -re 's/@PACKAGE_VERSION@/$(PACKAGE_VERSION)/g' $@-wip
	sed -i -re 's/@PACKAGE_RELEASE@/$(PACKAGE_RELEASE)/g' $@-wip
	sed -i -re 's/@PACKAGE_SUMMARY@/$(PACKAGE_SUMMARY)/g' $@-wip
	sed -i -re 's/@PACKAGE_DESCRIPTION@/$(PACKAGE_DESCRIPTION)/g' $@-wip
	sed -i -re 's/@PACKAGE_URL@/$(PACKAGE_URL)/g' $@-wip
	sed -i -re 's/@build_cpu@/$(build_cpu)/g' $@-wip
	mv $@-wip $@
	chmod +x $@

$(PACKAGE_NAME)-$(PACKAGE_VERSION).tar.gz: httpd.conf
	tar --transform="s'^'$(PACKAGE_NAME)-$(PACKAGE_VERSION)/'g" -cz -f $@ $^

dist-gzip: $(PACKAGE_NAME)-$(PACKAGE_VERSION).tar.gz $(PACKAGE_NAME).spec
.PHONY: dist-gzip

rpm: rpm.sh $(PACKAGE_NAME).spec dist-gzip
	bash $<
.PHONY: rpm

Makefile: Makefile.in
	./configure $(PREFIX)

distclean: clean
	rm -f Makefile
.PHONY: distclean
